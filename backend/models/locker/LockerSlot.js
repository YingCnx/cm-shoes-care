class LockerSlot {
  /**
   * üìå ‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ (‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ locker_id)
   */
  static async findAvailableSlot(locker_id) {
    const result = await pool.query(
      `SELECT id, locker_id, slot_number 
       FROM locker_slots 
       WHERE status = 'available' AND locker_id = $1
       ORDER BY slot_number ASC 
       LIMIT 1`,
      [locker_id]
    );
    return result.rows[0] || null;
  }

  /**
   * üìå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ is_closed (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ä‡πà‡∏≠‡∏á)
   */
  static async updateSlotIsClosed(slotId, isClosed) {
    await pool.query(
      `UPDATE locker_slots SET is_closed = $1 WHERE id = $2`,
      [isClosed, slotId]
    );
  }

  /**
   * üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö is_closed ‡∏Ç‡∏≠‡∏á slot_number (‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° locker_id ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏π‡πâ)
   */
  static async checkSlotClosed(slotNumber) {
    const result = await pool.query(
      `SELECT is_closed FROM locker_slots WHERE slot_number = $1`,
      [slotNumber]
    );
    return result.rows[0] || null;
  }

  /**
   * üìå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï status ‡πÄ‡∏õ‡πá‡∏ô 'used' (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ù‡∏≤‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤)
   */
  static async updateSlotStatus(slot_id) {
    await pool.query(
      `UPDATE locker_slots SET status = 'used' WHERE id = $1`,
      [slot_id]
    );
  }

  /**
   * üìå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ status ‡∏ä‡πà‡∏≠‡∏á‡∏ï‡∏π‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÉ‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô 'available', 'used', 'error')
   */
  static async setSlotStatus(slot_id, status) {
    await pool.query(
      `UPDATE locker_slots SET status = $1 WHERE id = $2`,
      [status, slot_id]
    );
  }

  /**
   * üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏¥‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà
   */
  static async isSlotAvailableAndOpen(slot_id) {
    const result = await pool.query(
      `SELECT status, is_closed FROM locker_slots WHERE id = $1`,
      [slot_id]
    );
    const slot = result.rows[0];
    return slot && slot.status === 'available' && slot.is_closed === false;
  }
}

export default LockerSlot;
