import pool from "../config/database.js";

class Expense {
    // ðŸ“Œ à¸”à¸¶à¸‡à¸„à¹ˆà¸²à¹ƒà¸Šà¹‰à¸ˆà¹ˆà¸²à¸¢à¸—à¸±à¹‰à¸‡à¸«à¸¡à¸”à¸‚à¸­à¸‡à¸„à¸´à¸§
    static async getById(queue_id) {
        try {
            const result = await pool.query(
                `SELECT e.id, e.queue_id, e.description, e.amount
                 FROM expenses e 
                 WHERE e.queue_id = $1 `,
                [queue_id]
            );
            return result.rows;
        } catch (error) {
            console.error("ðŸ”´ Error fetching expenses:", error);
            throw error;
        }
    }

    // ðŸ“Œ à¹€à¸žà¸´à¹ˆà¸¡à¸„à¹ˆà¸²à¹ƒà¸Šà¹‰à¸ˆà¹ˆà¸²à¸¢à¹ƒà¸«à¸¡à¹ˆ
    static async create({ queue_id, description, amount }) {
        try {
            const result = await pool.query(
                `INSERT INTO expenses (queue_id, description, amount) 
                 VALUES ($1, $2, $3) RETURNING *`,
                [queue_id, description, amount]
            );
            return result.rows[0];
        } catch (error) {
            console.error("ðŸ”´ Error adding expense:", error);
            throw error;
        }
    }

    // ðŸ“Œ à¸¥à¸šà¸„à¹ˆà¸²à¹ƒà¸Šà¹‰à¸ˆà¹ˆà¸²à¸¢
    static async delete(id) {
        try {
            const result = await pool.query(
                "DELETE FROM expenses WHERE id = $1 RETURNING *",
                [id]
            );
            return result.rows[0] || null;
        } catch (error) {
            console.error("ðŸ”´ Error deleting expense:", error);
            throw error;
        }
    }

    // ðŸ“Œ à¸”à¸¶à¸‡à¸„à¹ˆà¸²à¹ƒà¸Šà¹‰à¸ˆà¹ˆà¸²à¸¢à¸£à¸§à¸¡à¸‚à¸­à¸‡à¸„à¸´à¸§
    static async getTotalExpensesByQueue(queue_id) {
        try {
            const result = await pool.query(
                "SELECT COALESCE(SUM(amount), 0) AS total_expenses FROM expenses WHERE queue_id = $1",
                [queue_id]
            );
            return result.rows[0] || { total_expenses: 0 };
        } catch (error) {
            console.error("ðŸ”´ Error fetching total expenses:", error);
            throw error;
        }
    }
}

export default Expense;
