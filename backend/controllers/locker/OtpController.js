
import LockerSlot from '../../models/locker/LockerSlot.js';

// ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö OTP ‡πÅ‡∏ö‡∏ö‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥
const otpStore = new Map(); // key: phone, value: { otp, expiresAt }

const generateOTP = () => Math.floor(100000 + Math.random() * 900000).toString();

export const sendOTP = (req, res) => {
  const { phone } = req.body;

  if (!phone) {
    return res.status(400).json({ error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£' });
  }

  const otp = generateOTP();
  const expiresAt = Date.now() + 3 * 60 * 1000; // ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 3 ‡∏ô‡∏≤‡∏ó‡∏µ

  otpStore.set(phone, { otp, expiresAt });

  console.log(`üì≤ OTP ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå ${phone} ‡∏Ñ‡∏∑‡∏≠: ${otp}`);

  res.json({ message: '‡∏™‡πà‡∏á OTP ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ (mock)', otp }); // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏ì‡∏µ test (‡∏•‡∏ö‡∏ï‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô production)
};

export const verifyOTP = async (req, res) => {
  const { phone, otp } = req.body;

  const stored = otpStore.get(phone);
  if (!stored || stored.otp !== otp || Date.now() > stored.expiresAt) {
    return res.status(400).json({ message: 'OTP ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏' });
  }

  otpStore.delete(phone);

  try {
    res.json({
      message: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    });
  } catch (err) {
    console.error('üî¥ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP' });
  }
};
