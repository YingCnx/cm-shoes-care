import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { checkSession } from "../services/authService";
import { getQueueDetail, getAllServices, addQueueItems, deleteQueueItem, uploadAfterImages, updateQueue, updateQueueStatus, deleteQueue,generateInvoice } from '../services/api';
import { getExpenses, createExpense, deleteExpense, createPayment, cancelPayment } from "../services/api"; 
import './QueueDetail.css';
import '../assets/css/bootstrap.min.css';
import AddShoeModal from "../components/AddShoeModal"; 
import ShoeDetailModal from "../components/ShoeDetailModal"; 
import AddExpenseModal from "../components/AddExpenseModal";
import UpdateQueueStatusModal from "../components/UpdateQueueStatusModal";
import PaymentModal from "../components/PaymentModal";
import { printReceipt } from "../components/printReceipt"; // ‚úÖ Import ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏•‡∏¥‡∏õ
import EditQueueModal from "../components/EditQueueModal";
import InvoiceModal from '../components/InvoiceModal';
import CameraCaptureModal from "../components/CameraCaptureModal";
import { FaEye,FaPlus } from 'react-icons/fa';




const QueueDetail = () => {
    const navigate = useNavigate();
    const { queue_id } = useParams();
    const [queue, setQueue] = useState(null);
    const [services, setServices] = useState([]);
    const [expenses, setExpenses] = useState([]);
    const [newExpense, setNewExpense] = useState({ description: "", amount: "" });

    const Backend_URL = 'http://localhost:5000';

    const [showAddShoeModal, setShowAddShoeModal] = useState(false);
    const [showShoeDetailModal, setShowShoeDetailModal] = useState(false);
    const [selectedShoe, setSelectedShoe] = useState(null);

    const [showAddExpenseModal, setShowAddExpenseModal] = useState(false);

    const [showUpdateQueueStatusModal, setShowUpdateQueueStatusModal] = useState(false);
    const [selectedQueueId, setSelectedQueueId] = useState(null);
    const [currentStatus, setCurrentStatus] = useState("");


    const totalPairs = queue?.queue_items?.length || 0;
    const totalPrice = queue?.queue_items?.reduce((sum, item) => sum + parseFloat(item.price_per_pair), 0 || 0.00);

    const [afterImages, setAfterImages] = useState({
        front: null,
        back: null,
        left: null,
        right: null,
        top: null,
        bottom: null
    });

    const [showUploadAfterModal, setShowUploadAfterModal] = useState(false);
    const [selectedItemId, setSelectedItemId] = useState(null);

    const [showPaymentModal, setShowPaymentModal] = useState(false);

    const [showEditModal, setShowEditModal] = useState(false);
    const [editingQueue, setEditingQueue] = useState(null);

    const [currentAfterPosition, setCurrentAfterPosition] = useState(null);


    const [invoiceUrl, setInvoiceUrl] = useState(null);
    const [showInvoiceModal, setShowInvoiceModal] = useState(false);

    
    const sourceColors = {
        manual:   '#6C757D',  // ‡πÄ‡∏ó‡∏≤ Bootstrap = ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏≠‡∏õ)
        locker:   '#FFB74D',  // ‡∏™‡πâ‡∏°‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏• = Locker (‡∏™‡∏µ‡πÅ‡∏ó‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á)
        line:     '#06C755',  // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß LINE Official (‡∏à‡∏≤‡∏Å LINE Brand Guidelines)
        facebook: '#1877F2',  // ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô Facebook
        wechat:   '#7BB32E',  // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß WeChat ‡∏à‡∏£‡∏¥‡∏á (‡∏à‡∏≤‡∏Å Tencent branding)
        unknown:  '#B0BEC5'   // ‡πÄ‡∏ó‡∏≤‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏• = ‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏
    };

    const sourceLabels = {
        manual: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        locker: 'Locker',
        line: 'LINE',
        facebook: 'Facebook',
        wechat: 'WeChat',
        unknown: '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'
    };
    useEffect(() => {
    const init = async () => {
        const user = await checkSession();
        if (!user) {
        setTimeout(() => navigate("/login"), 0);
        return;
        }

        if (queue_id) {
        fetchQueueDetail();
        fetchServices();
        fetchExpenses();
        }
    };

    init();
    }, [navigate, queue_id]);


    const fetchQueueDetail = async () => {
        try {
            const res = await getQueueDetail(queue_id);
            //console.log("üìå Debug: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API", res.data); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å API
            setQueue(res.data);
        } catch (error) {
            console.error("üî¥ Error fetching queue detail:", error);
        }
    };

    const fetchServices = async () => {
        try {
            const res = await getAllServices();            
            setServices(res.data);
        } catch (error) {
            console.error("üî¥ Error fetching services:", error.response?.data || error.message);
        }
    };
    
    const fetchExpenses = async () => {
        try {
            const res = await getExpenses(queue_id);
            setExpenses(res.data);
        } catch (error) {
            console.error("üî¥ Error fetching expenses:", error);
        }
    };

    const handleAddExpense = async (expense) => { 
        if (!expense.description.trim() || isNaN(expense.amount) || parseFloat(expense.amount) <= 0) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0");
            return;
        }
        try {
            // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô JSON
            await createExpense({
                queue_id,
                description: expense.description.trim(),
                amount: parseFloat(expense.amount),
            });
    
            alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");

            await fetchQueueDetail();
            await fetchExpenses();

            setShowAddExpenseModal(false);
        } catch (error) {
            console.error("üî¥ Error adding expense:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ");
        }
    };
    

    const handleDeleteExpense = async (expense_id) => {
        if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) return;
        try {
            await deleteExpense(queue_id,expense_id);
            alert("‚úÖ ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
            
            await fetchQueueDetail();
            await fetchExpenses();

        } catch (error) {
            console.error("üî¥ Error deleting expense:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ");
        }
    };

    const getTotalExpenses = () => expenses.reduce((sum, exp) => sum + parseFloat(exp.amount), 0);


    const handleRemoveShoe = async (queue_item_id) => {
       
        if (!queue_item_id) {
            console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö item_id");
            return;
        }

        if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ô‡∏µ‡πâ?")) return;
        try {
    
            await deleteQueueItem(queue_id, queue_item_id);
            alert("‚úÖ ‡∏•‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
            fetchQueueDetail();
        } catch (error) {
            console.error("üî¥ Error deleting shoe:", error);
        }
    };

    const openUploadAfterModal = (queue_item_id) => {
        setSelectedItemId(queue_item_id);
        setShowUploadAfterModal(true);
    };

    const closeUploadAfterModal = () => {
        setShowUploadAfterModal(false);
        setAfterImages({ front: null, back: null, left: null, right: null, top: null, bottom: null });
    };

    const handleAfterImageUpload = (position, file) => {
        if (file) {
            setAfterImages(prev => ({ ...prev, [position]: file }));
        }
    };
        
    const handleUploadAfterImages = async () => {
        if (!selectedItemId) {
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Item ID");
            return;
        }

        const positions = Object.keys(afterImages).filter(pos => afterImages[pos] instanceof File);
        if (positions.length === 0) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ AFTER ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏°‡∏∏‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î");
            return;
        }

        const confirm = window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ AFTER?");
        if (!confirm) return;

        const formData = new FormData();
        for (const pos of positions) {
            formData.append(`image_after_${pos}`, afterImages[pos]);
        }

        try {
            await uploadAfterImages(queue_id, selectedItemId, formData);
            alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ AFTER ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
            await fetchQueueDetail(); // ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            closeUploadAfterModal();  // ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå state
            setAfterImages({ front: null, back: null, left: null, right: null, top: null, bottom: null }); // reset
        } catch (error) {
            console.error("üî¥ Error uploading after images:", error);
            alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î!");
        }
    };

    const handleAddShoe = async (selectedService, shoeData) => {
    
        if (!selectedService || !shoeData.brand || !shoeData.model || !shoeData.color) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }
    
        const selectedServiceData = services.find(service => service.id === parseInt(selectedService));
        const price_per_pair = selectedServiceData ? selectedServiceData.base_price : 0;
    
        // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á `shoeData` ‡πÄ‡∏õ‡πá‡∏ô `FormData`
        const formData = new FormData();
        formData.append("queue_id", queue_id);
        formData.append("service_id", selectedService);
        formData.append("brand", shoeData.brand);
        formData.append("model", shoeData.model);
        formData.append("color", shoeData.color);
        formData.append("notes", shoeData.notes || "");
        formData.append("price_per_pair", price_per_pair);
    
        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤ `FormData`
        Object.keys(shoeData.images).forEach((key) => {
            if (shoeData.images[key]) {
                formData.append(key, shoeData.images[key]); 
            }
        });
        
        try {

            const res = await addQueueItems(queue_id, formData);

            alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
            fetchQueueDetail();
        setShowAddShoeModal(false); // ‚úÖ ‡∏õ‡∏¥‡∏î Modal ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        } catch (error) {
            console.error("üî¥ Error adding shoe:", error);
            alert("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤");
        }
    };

     // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Modal ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤
     const handleShowShoeDetail = (shoe) => {
        setSelectedShoe(shoe);
        setShowShoeDetailModal(true);
    };
      

    const getServiceSummary = () => {
        const serviceMap = {};
    
        // ‚úÖ ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤
        if (queue && queue.queue_items && queue.queue_items.length > 0) {
            queue.queue_items.forEach(item => {
                if (!serviceMap[item.service_id]) {
                    serviceMap[item.service_id] = {
                        service_name: item.service_name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", 
                        total_pairs: 0,
                        total_price: 0
                    };
                }
    
                serviceMap[item.service_id].total_pairs += 1;
    
                const price = parseFloat(item.price_per_pair);
                serviceMap[item.service_id].total_price += !isNaN(price) ? price : 0;
            });
        }
    
        // ‚úÖ ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (expenses)
        if (expenses && expenses.length > 0) {
            expenses.forEach(exp => {
                const expenseKey = `expense_${exp.id}`;
    
                serviceMap[expenseKey] = {
                    service_name: exp.description,  // ‚úÖ ‡πÉ‡∏ä‡πâ description ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£
                    total_pairs: 1,                 // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
                    total_price: parseFloat(exp.amount) || 0 // ‚úÖ ‡πÉ‡∏ä‡πâ amount ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                };
            });
        }
    
        return Object.values(serviceMap);
    };

    const handleOpenPaymentModal = () => {
        if(queue.payment_status == "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß"){
            alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ!");
            return;
        }
        setShowPaymentModal(true);
    };

    const handleConfirmPayment = async (discount, totalAmount, paymentMethod) => {
    const message = "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏î‡πÜ ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å\n‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?";
    
    if (!window.confirm(message)) return;

    try {
        const paymentRes = await createPayment({
            queue_id,
            discount,
            total_amount: totalAmount,
            payment_method: paymentMethod,
        });

        const payment_id = paymentRes.data.payment_id || "N/A";

        alert("‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
        setShowPaymentModal(false);

        await fetchQueueDetail(); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß
        navigate("/queue"); // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß

        // ‚úÖ ‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏•‡∏¥‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const confirmPrint = window.confirm("üñ® ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏•‡∏¥‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
        if (confirmPrint) {
            printReceipt(payment_id,queue, getServiceSummary(), discount, totalAmount, paymentMethod);
        }
        
    } catch (error) {
        console.error("üî¥ Error processing payment:", error);
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ");
    }
};

    
    const handleUpdateQueueStatus = async (queueId, newStatus, totalPrice, deliveryData = {}) => {
        try {
            const deliveryMethod = deliveryData.deliveryMethod || null;

            // ‚úÖ ‡∏™‡πà‡∏á deliveryMethod ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            await updateQueueStatus(queueId, newStatus, totalPrice, deliveryMethod);

            alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
            fetchQueueDetail(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        } catch (error) {
            console.error("üî¥ Error updating queue status:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏î‡πâ");
        }
    };

    const handleOpenUpdateStatusModal = (queueId, status) => {
        setSelectedQueueId(queueId);
        setCurrentStatus(status);
        setShowUpdateQueueStatusModal(true);
    };

    const handleDeleteQueue = async (queueId) => {
            if(queue.status == "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"){
                alert("üî¥ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
                return;
            }
     
            if (window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏µ‡πâ?")) {
                try {
                    await deleteQueue(queueId);
                    alert("‚úÖ ‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!"); // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    navigate('/queue'); // ‚úÖ Redirect ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ QueueAdmin
                } catch (error) {
                    console.error("üî¥ Error deleting queue:", error);
                }
            }
        };
    
    const getStatusTextClass = (status) => {
        switch (status) {
            case "‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤":
                return "text-secondary"; // ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤
            case "‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î":
                return "text-warning"; // ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
            case "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á":
                return "text-info"; // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤
            case "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á":
                return "text-primary"; // ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
            case "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à":
                return "text-success"; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß  
            case "pending":
            return "text-danger"; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß   
            case "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß":
            return "text-success"; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß               
            default:
                return "text-dark"; // ‡∏™‡∏µ‡∏î‡∏≥ ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        }
    };
    
    const totalServicePrice = queue?.queue_items?.reduce((sum, item) => sum + parseFloat(item.price_per_pair || 0), 0);
    const totalExpense = expenses?.reduce((sum, exp) => sum + parseFloat(exp.amount || 0), 0);
    const totalQueuePrice = (totalServicePrice + totalExpense).toFixed(2); // ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°

    //‡πÄ‡∏°‡∏∑‡πà‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
    const isPaid = queue?.payment_status === "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß";
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isTotalZero = parseFloat(totalQueuePrice) <= 0; 

    // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    const handleCancelPayment = async () => {
        if (!window.confirm("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô?")) return;
    
        try {
            await cancelPayment(queue_id); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
            alert("‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
    
            await fetchQueueDetail(); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        } catch (error) {
            console.error("üî¥ Error cancelling payment:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ");
        }
    };

    const handleEdit = (queueId) => {
        setSelectedQueueId(queueId);
        setShowEditModal(true);
    };

    
    const handleUpdateQueue = async (updatedData) => {
        // üëâ call API updateQueue here
        const id = updatedData.queue_id;
        try{
            await updateQueue(id, updatedData);
            alert("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
            fetchQueueDetail(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        }
        catch(error){
            console.error("üî¥ Error updating queue:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß‡πÑ‡∏î‡πâ");
        }
        // ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡∏õ‡∏¥‡∏î modal
        setShowEditModal(false);
    };

    const handleCloseEditModal = () => {
        setShowEditModal(false);  
    };

    const handleGenerateInvoice = async (queue_id) => {
        try {
            const res = await generateInvoice(queue_id); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
            setInvoiceUrl(res.data.image_base64); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Base64
            console.log("üìÑ Base64:", res.data.image_base64);
            setShowInvoiceModal(true); // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Modal
        } catch (error) {
            console.error("üî¥ Error generating invoice:", error);
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏î‡πâ");
        }
    };
    


    const buttonStyle = {
        minWidth: "120px",
        fontSize: "16px",
        padding: "10px 16px",
        borderRadius: "12px",
        textAlign: "center",
        };

    if (!queue) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;

    return (
        <div className="queue-container">
            <div className="d-flex justify-content-between align-items-center"> {/* ‚úÖ Container for date/time and title */}
             <div>
                <br/>
                <h2> ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h2>
             </div>
          </div>
          <div className="section-card position-relative">
            <div className="position-relative">
                {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏≠‡∏¢‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô */}
                <div
                className="position-absolute top-0 end-0 d-flex gap-2 flex-wrap"
                style={{ transform: "translateY(-20px)" }}
                >
                <button className="btn btn-primary uniform-button" style={buttonStyle} onClick={() => handleEdit(queue_id)}>
                    ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>
                {isPaid ? (
                    <button className="btn btn-danger uniform-button" style={buttonStyle} onClick={handleCancelPayment}>
                    ‚õî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                    </button>
                ) : (
                    <button className="btn btn-success uniform-button" style={buttonStyle} onClick={handleOpenPaymentModal} disabled={isTotalZero}>
                    üí∞ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                    </button>
                )}
                <button className="btn btn-warning uniform-button" style={buttonStyle} onClick={() => handleOpenUpdateStatusModal(queue.queue_id, queue.status)}>
                    ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                </button>
                <button className="btn btn-success uniform-button" style={buttonStyle} onClick={() =>handleGenerateInvoice(queue_id)}>
                     ‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤                      
                </button>
                <button className="btn btn-danger uniform-button" style={buttonStyle} onClick={() => handleDeleteQueue(queue_id)} disabled={isPaid}>
                    ‡∏•‡∏ö‡∏Ñ‡∏¥‡∏ß
                </button>
                </div>

                {/* ‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡∏•‡∏≠‡∏¢‡πÉ‡∏ï‡πâ‡∏õ‡∏∏‡πà‡∏° */}
                <div
                className="position-absolute end-0"
                style={{
                    top: "40px", // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
                    background: "#f8f9fa",
                    padding: "8px 16px",
                    borderRadius: "12px",
                    boxShadow: "0 2px 8px rgba(0,0,0,0.1)",
                    zIndex: 1,
                }}
                >
                <div className="d-flex gap-5 flex-wrap align-items-center">
                    <span className="fw-bold text-dark">
                    üì¶ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô:
                    <span className={getStatusTextClass(queue.status)} style={{ marginLeft: "6px" }}>
                        {queue.status}
                    </span>
                    </span>

                    <span className="fw-bold text-dark">
                    üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:
                    <span className={getStatusTextClass(queue.payment_status)} style={{ marginLeft: "6px" }}>
                        {queue.payment_status}
                    </span>
                    </span>
                </div>
                </div>

                {/* ‚úÖ ‡∏´‡∏±‡∏ß‡∏Ñ‡∏¥‡∏ß */}
                <h5 className="mb-3">üè∑Ô∏è ‡∏Ñ‡∏¥‡∏ß‡∏á‡∏≤‡∏ô #{queue_id} - ‡∏™‡∏≤‡∏Ç‡∏≤ {queue.branch_name}</h5>
            </div>

            <div className="row mb-2">
            <div className="col-md-5">
                <strong>‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á:</strong>{" "}
                <span
                style={{
                    backgroundColor: sourceColors[queue.source] || "#eee",
                    color: "white",
                    padding: "2px 8px",
                    borderRadius: "5px",
                    padding: "2px 8px",
                    fontSize: "0.75rem",
                }}
                >
                {sourceLabels[queue.source] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
                </span>
            </div>

            {queue.source === "locker" && (
                <div className="col-md-6">
                <strong>‡∏ï‡∏π‡πâ:</strong>{" "}
                <span className="text-muted">
                    {queue.locker_code} - {queue.locker_name}
                </span>{" "}
                </div>
            )}
            </div>

            {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ */}
            <div className="row mb-2">
                <div className="col-md-5">
                <strong>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ : </strong> {queue.customer_name}
                </div>
                <div className="col-md-6">
                <strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ : </strong> {queue.phone}
                </div>
            </div>
            
            <div className="row mb-2">
                <div className="col-md-5">
                <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà : </strong> {queue.location}
                </div>
                <div className="col-md-6">
                <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏π‡πà : </strong> {queue.total_pairs}
                </div>
            </div>

            <div className="row mb-2">
                <div className="col-md-5">
                <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö : </strong> {new Date(queue.received_date).toLocaleDateString()}
                </div>
                <div className="col-md-6">
                <strong>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á : </strong> {new Date(queue.delivery_date).toLocaleDateString()}
                </div>
            </div>
            </div>



            <div className="section-card">
            <div className="d-flex justify-content-between align-items-center mb-2">
                <h4>üëü ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤</h4>
                        <button
                            className="btn btn-primary" onClick={() => {setShowAddShoeModal(true);}}
                            disabled={isPaid}
                            >
                            <FaPlus style={{ marginRight: "6px" }} />
                            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤
                        </button>
            </div>

           <table className="table table-hover table-striped">
            <thead>
                <tr>
                <th>‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå</th>
                <th>‡∏£‡∏∏‡πà‡∏ô</th>
                <th>‡∏™‡∏µ</th>
                <th>‡∏£‡∏π‡∏õ BEFORE</th>
                <th>‡∏£‡∏π‡∏õ AFTER</th>
                <th>‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</th>
                <th>‡∏•‡∏ö</th>
                </tr>
            </thead>
            <tbody>
                {queue.queue_items.length === 0 ? (
                <tr>
                    <td colSpan="7" className="text-center text-muted py-3">
                    üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏µ‡πâ
                    </td>
                </tr>
                ) : (
                queue.queue_items.map((item, index) => (
                    <tr key={index} onClick={() => handleShowShoeDetail(item)}>
                    <td>{item.brand}</td>
                    <td>{item.model}</td>
                    <td>{item.color}</td>

                    {/* ‚úÖ BEFORE Images */}
                    <td>
                        <div className="shoe-images">
                        {["front"].map((pos) =>
                            item[`image_before_${pos}`] ? (
                            <img
                                key={pos}
                                src={`${Backend_URL}${item[`image_before_${pos}`]}`}
                                alt={`before-${pos}`}
                                width="50"
                            />
                            ) : null
                        )}
                        </div>
                    </td>

                    {/* ‚úÖ AFTER Images */}
                    <td>
                        <div className="shoe-images">
                        {["front"].map((pos) =>
                            item[`image_after_${pos}`] ? (
                            <img
                                key={pos}
                                src={`${Backend_URL}${item[`image_after_${pos}`]}`}
                                alt={`after-${pos}`}
                                width="50"
                            />
                            ) : null
                        )}
                        </div>
                    </td>

                    <td>{item.price_per_pair}</td>

                    {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö */}
                    <td>
                        <button
                        className="btn btn-danger btn-sm"
                        onClick={(e) => {
                            e.stopPropagation();
                            handleRemoveShoe(item.queue_item_id);
                        }}
                        disabled={isPaid}
                        >
                        ‚ùå ‡∏•‡∏ö
                        </button>
                    </td>
                    </tr>
                ))
                )}
            </tbody>
            </table>

            
            <div className="d-flex justify-content-between align-items-center mb-2 mt-4">
                <h4>üí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
                <button
                    className="btn btn-primary" onClick={() => setShowAddExpenseModal(true)} disabled={isPaid}>
                    <FaPlus style={{ marginRight: "6px" }} />
                    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
                </button>
            </div>
           
            {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
            <table className="table table-hover table-striped">
                <thead>
                    <tr>
                    <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                    <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</th>
                    <th>‡∏•‡∏ö</th>
                    </tr>
                </thead>
                <tbody>
                    {expenses.length === 0 ? (
                    <tr>
                        <td colSpan="3" className="text-center text-muted py-3">
                        üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                        </td>
                    </tr>
                    ) : (
                    expenses.map((expense, index) => (
                        <tr key={index}>
                        <td>{expense.description}</td>
                        <td>{expense.amount}</td>
                        <td>
                            <button
                            className="btn btn-danger btn-sm"
                            onClick={() => handleDeleteExpense(expense.id)}
                            disabled={isPaid}
                            >
                            ‚ùå ‡∏•‡∏ö
                            </button>
                        </td>
                        </tr>
                    ))
                    )}
                </tbody>
                </table>

              </div>       
            <div className="card p-3 shadow mt-4">

                {/* ‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ */}
                <h4>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ</h4>
                <table className="table table-hover table-striped">
  <thead>
    <tr>
      <th>‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</th>
      <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
      <th>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)</th>
    </tr>
  </thead>
  <tbody>
    {getServiceSummary().length === 0 ? (
      <tr>
        <td colSpan="3" className="text-center text-muted py-3">
          üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏µ‡πâ
        </td>
      </tr>
    ) : (
      <>
        {getServiceSummary().map((service, index) => (
          <tr key={index}>
            <td>{service.service_name}</td>
            <td>{service.total_pairs}</td>
            <td>{service.total_price ? service.total_price.toFixed(2) : "0.00"}</td>
          </tr>
        ))}

        {/* ‚úÖ ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á */}
        <tr className="total-row">
          <td><strong>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</strong></td>
          <td><strong>{getServiceSummary().reduce((sum, s) => sum + s.total_pairs, 0)}</strong></td>
          <td><strong>{getServiceSummary().reduce((sum, s) => sum + s.total_price, 0).toFixed(2)}</strong></td>
        </tr>
      </>
    )}
  </tbody>
</table>


            </div>
                    
        {showUploadAfterModal && (
            <div className="upload-modal-overlay d-flex align-items-center justify-content-center">
                <div className="upload-modal-content card p-4 shadow-lg" style={{ width: '90%', maxWidth: '800px' }}>
                    <h3 className="text-center mb-4">üì∑ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ AFTER</h3>

                    <div className="row g-4">
                        {["front", "back", "left", "right", "top", "bottom"].map((pos, index) => (
                            <div key={index} className="col-6 col-md-4 text-center">
                                <label className="form-label fw-bold">{`üì∑ ‡∏î‡πâ‡∏≤‡∏ô ${pos.toUpperCase()}`}</label>
                                <div className="mb-2">
                                    <button className="btn btn-outline-primary w-100" onClick={() => setCurrentAfterPosition(pos)}>
                                        ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ
                                    </button>
                                </div>
                                {afterImages[pos] && (
                                    <img
                                        src={URL.createObjectURL(afterImages[pos])}
                                        alt={`after-${pos}`}
                                        className="img-thumbnail"
                                        style={{ width: '100%', maxHeight: '120px', objectFit: 'cover' }}
                                    />
                                )}
                            </div>
                        ))}
                    </div>

                    <div className="d-flex justify-content-end mt-4 gap-2">
                        <button className="btn btn-danger" onClick={closeUploadAfterModal}>‚ùå ‡∏õ‡∏¥‡∏î</button>
                        <button className="btn btn-success" onClick={handleUploadAfterImages}>‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</button>
                    </div>
                </div>

                {/* Modal ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ */}
                <CameraCaptureModal
                    show={!!currentAfterPosition}
                    onClose={() => setCurrentAfterPosition(null)}
                    onCapture={(file) => {
                        setAfterImages(prev => ({ ...prev, [currentAfterPosition]: file }));
                        setCurrentAfterPosition(null);
                    }}
                />
            </div>
        )}


        <div className="container queue-detail-container">
            <PaymentModal
                show={showPaymentModal}
                onClose={() => setShowPaymentModal(false)}
                onConfirm={handleConfirmPayment}
                serviceSummary={getServiceSummary()}
                totalPrice={parseFloat((queue?.total_price || 0) + getTotalExpenses()) || 0} // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
            />

            <UpdateQueueStatusModal
                show={showUpdateQueueStatusModal}
                handleClose={() => setShowUpdateQueueStatusModal(false)}
                handleUpdate={handleUpdateQueueStatus}
                queueId={queue_id}
                currentStatus={queue?.status}
                totalPrice={totalQueuePrice}
                queue={queue}
            />

            {showAddShoeModal && (
                <AddShoeModal 
                    show={showAddShoeModal} 
                    onClose={() => {
                        setShowAddShoeModal(false);
                    }} 
                    onAddShoe={(selectedService, shoeData) => {
                        handleAddShoe(selectedService, shoeData); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤
                    }} 
                    services={services} 
                />
            )}
        
            {showShoeDetailModal && (
                <ShoeDetailModal 
                show={showShoeDetailModal} 
                onClose={() => setShowShoeDetailModal(false)} 
                shoe={selectedShoe} 
                queue_id={queue_id} // ‚úÖ ‡∏™‡πà‡∏á queue_id ‡πÑ‡∏õ
                fetchQueueDetail={fetchQueueDetail} 
                uploadAfterImages={uploadAfterImages} 
            />        
                    )}
       
            

            {/* Modal ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ */}
            <AddExpenseModal
                show={showAddExpenseModal}
                onClose={() => setShowAddExpenseModal(false)}
                onAddExpense={handleAddExpense} // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
            />

             {/* Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏¥‡∏ß */}           
            <EditQueueModal
                show={showEditModal}
                onClose={() => setShowEditModal(false)}
                queueId={selectedQueueId}
                onSave={handleUpdateQueue}
            />

            {/* Modal ‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ */}    
            <InvoiceModal
                show={showInvoiceModal}
                onClose={() => setShowInvoiceModal(false)}
                imageBase64={invoiceUrl}
                />

            </div>
        </div>
    );
};

export default QueueDetail;
