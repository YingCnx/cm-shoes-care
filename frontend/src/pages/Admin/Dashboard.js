import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { getQueue, getAppointments, createAdmin } from '../services/api';
import './Dashboard.css';
import '../assets/css/bootstrap.min.css';



const statusColors = {
  '‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤': '#FFCDD2', // ‡πÅ‡∏î‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î': '#FFE0B2', // ‡∏™‡πâ‡∏°‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á': '#FFF9C4', // ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á': '#F8BBD0', // ‡∏ä‡∏°‡∏û‡∏π‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à': '#C8E6C9', // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
};

const appointmentColors = {
  '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': '#FFCDD2', // ‡πÅ‡∏î‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß': '#FFF9C4', // ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
  '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à': '#C8E6C9', // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
};

const Dashboard = () => {
  const navigate = useNavigate();
  const [queue, setQueue] = useState([]);
  const [appointments, setAppointments] = useState([]);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      navigate('/login');
    }
    fetchQueueData();
    fetchAppointmentData();
  }, []);

  const fetchQueueData = async () => {
    try {
      const res = await getQueue();
      const filteredQueue = res.data.filter(item => Object.keys(statusColors).includes(item.status));
      console.log("queue:",filteredQueue);
      setQueue(filteredQueue);
    } catch (error) {
      console.error('üî¥ Error fetching queue data:', error);
    }
  };

  const fetchAppointmentData = async () => {
    try {
      const res = await getAppointments();
      const filteredAppointments = res.data.filter(appt => Object.keys(appointmentColors).includes(appt.status));
      setAppointments(filteredAppointments);
    } catch (error) {
      console.error('üî¥ Error fetching appointments:', error);
    }
  };

  return (
    <div className="dashboard-container">
      <div className="container-fluid mt-4">
      <div className="row">
        <div className="col-lg-12">
          <h1 className="text-left mb-4">üìä Dashboard</h1>
          <section className="summary">
          <p>‡∏Ñ‡∏¥‡∏ß‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: {queue.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
          <p>‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: {appointments.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        </section>
          <div className="card">
            <div className="card-body">
              <h2>üîÑ ‡∏Ñ‡∏¥‡∏ß‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ({queue.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</h2>
              <table className="table table-hover">
                <thead className="table-dark">
                  <tr>
                    <th>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
                    <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏π‡πà</th>
                    <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö</th>
                    <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô</th>
                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                  </tr>
                </thead>
                <tbody>
                  {queue.map(item => (
                    <tr key={item.queue_id}>
                      <td>{item.customer_name}</td>
                      <td>{item.location}</td>
                      <td>{item.total_pairs}</td>
                      <td>{new Date(item.received_date).toLocaleDateString()}</td>
                      <td>{new Date(item.delivery_date).toLocaleDateString()}</td>
                      <td><span className={statusColors[item.status]}>{item.status}</span></td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      
      <div className="row mt-4">
        <div className="col-lg-12">
          <div className="card">
            <div className="card-body">
              <h2>üìÖ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ({appointments.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</h2>
              <table className="table table-hover">
                <thead className="table-dark">
                  <tr>
                    <th>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                    <th>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
                    <th>‡∏ß‡∏±‡∏ô/‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</th>
                    <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                  </tr>
                </thead>
                <tbody>
                  {appointments.map(appt => (
                    <tr key={appt.id}>
                      <td>{appt.customer_name}</td>
                      <td>{appt.phone}</td>
                      <td>{appt.location}</td>
                      <td>{new Date(appt.appointment_date).toLocaleDateString()}{" "}{appt.appointment_time.slice(0,5)} ‡∏ô.</td>
                      <td><span className={appointmentColors[appt.status]}>{appt.status}</span></td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
  );
};


export default Dashboard;
