import React from "react";
import "../assets/css/bootstrap.min.css";

const UpdateQueueStatusModal = ({ show, handleClose, handleUpdate, queueId, currentStatus, totalPrice}) => {
    const statusMap = {
        "‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤": "‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î",
        "‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î": "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á",
        "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á": "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á",
        "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á": "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
    };

    const newStatus = statusMap[currentStatus] || currentStatus;
    const [status, setStatus] = React.useState(newStatus);
    const [price, setPrice] = React.useState(parseFloat(totalPrice).toFixed(2));

    React.useEffect(() => {
        setStatus(newStatus);
        setPrice(parseFloat(totalPrice).toFixed(2)); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô undefined
    }, [currentStatus, totalPrice]);

    const handleSubmit = () => {
        if (!window.confirm(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "${status}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`)) return;

        const totalQueuePrice = parseFloat(price) || 0;
        if (totalQueuePrice === 0) {
            alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞!");
            return;
        }

        //.log("data",queueId,status,totalQueuePrice);
        handleUpdate(queueId, status, totalQueuePrice);
        
        if (status === "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á") {
            alert("!!‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏° ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ After ‡∏ô‡∏∞‡∏Ñ‡∏∞");
        }

        handleClose();
    };

    if (!show) return null;

    return (
        <div className="modal-overlay">
            <div className="modal-content card p-4 shadow" style={{ backgroundColor: "#fff" }}>
                <h2 className="text-center mb-3">üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß</h2>
                <div className="mb-3">
                    <label className="form-label">‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏õ‡πá‡∏ô</label>
                    <select className="form-select" value={status} onChange={(e) => setStatus(e.target.value)}>
                        {Object.keys(statusMap).map(key => (
                            <option key={key} value={statusMap[key]}>{statusMap[key]}</option>
                        ))}
                    </select>
                </div>
               
                    <div className="d-flex justify-content-between mt-3">
                        <button className="btn btn-secondary w-45" onClick={handleClose}>
                            ‚ùå ‡∏õ‡∏¥‡∏î
                        </button>
                        <button className="btn btn-success w-45" onClick={handleSubmit}>
                            ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                        </button>
                    </div>
                
            </div>
        </div>
    );
};

export default UpdateQueueStatusModal;
